{"mappings":"AAAA,MAAM,sBAAsB;IAC1B,aAAc;QACZ,KAAK;QAEL,IAAI,CAAC,YAAY,CAAC;YAAE,MAAM;QAAO;IACnC;IAEA,8BAA8B;QAC5B,MAAM,gBAAgB,IAAI,CAAC,YAAY,CAAC,oBAAoB;QAC5D,MAAM,aAAa,IAAI,CAAC,YAAY,CAAC,iBAAiB;QACtD,MAAM,iBAAiB,IAAI,CAAC,YAAY,CAAC,qBAAqB;QAC9D,MAAM,YAAY,IAAI,CAAC,YAAY,CAAC,gBAAgB;QACpD,MAAM,aAAa,IAAI,CAAC,YAAY,CAAC,iBAAiB;QACtD,MAAM,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU;QAExC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC;;;;;;;;;;;;;;;0BAeP,EAAE,cAAc;uBACnB,EAAE,WAAW;2BACT,EAAE,eAAe;eAC7B,EAAE,IAAI;;;;;;;;;;;;;IAajB,CAAC;QAED,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE3C,KAAK,gBAAgB,CAAC,cAAc;YAClC,MAAM,gBAAgB,KAAK,aAAa;YACxC,cAAc,OAAO,CAAC,CAAC;gBACrB,IAAI,KAAK,SAAS,IAAI,KAAK,SAAS,CAAC,QAAQ,CAAC,kBAAkB;oBAC9D,KAAK,KAAK,CAAC,KAAK,GAAG;oBACnB,KAAK,KAAK,CAAC,MAAM,GAAG;oBAEpB,MAAM,aAAa,KAAK,aAAa,CAAC;oBAEtC,IAAI,YAAY;wBACd,WAAW,KAAK,CAAC,SAAS,GAAG;wBAC7B,WAAW,KAAK,CAAC,KAAK,GAAG;wBACzB,WAAW,KAAK,CAAC,MAAM,GAAG;oBAC5B;gBACF;YACF;QACF;IACF;IAEA,oBAAoB;QAClB,IAAI,CAAC,2BAA2B;IAClC;AACF;AAEA,eAAe,MAAM,CAAC,mBAAmB,gBAEzC;;;;;;;;;;;;;;AAcA","sources":["src/list/index.js"],"sourcesContent":["class SqsCustomList extends HTMLElement {\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: \"open\" });\n  }\n\n  getPropsValuesAndRenderList() {\n    const flexDirection = this.getAttribute(\"flexDirection\") || \"row\";\n    const alignItems = this.getAttribute(\"alignItems\") || \"stretch\";\n    const justifyContent = this.getAttribute(\"justifyContent\") || \"flex-start\";\n    const itemWidth = this.getAttribute(\"itemWidth\") || \"auto\";\n    const itemHeight = this.getAttribute(\"itemHeight\") || \"auto\";\n    const gap = this.getAttribute(\"gap\") || \"0\";\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        * {\n          box-sizing: border-box;\n        }\n\n        img {\n          max-width: 100%;\n        }\n\n        .sqs-list-container {\n          display: flex;\n          margin: 0;\n          padding: 0;\n          list-style-type: none;\n          flex-direction: ${flexDirection};\n          align-items: ${alignItems};\n          justify-content: ${justifyContent};\n          gap: ${gap};\n        }\n\n        .sqs-list-item {\n          display: flex;\n          padding: 0;\n          margin: 0;\n        }\n      </style>\n\n      <div class=\"sqs-list-container\">\n        <slot></slot>\n      </div>\n    `;\n\n    const slot = this.shadowRoot.querySelector(\"slot\");\n\n    slot.addEventListener(\"slotchange\", () => {\n      const assignedNodes = slot.assignedNodes();\n      assignedNodes.forEach((node) => {\n        if (node.classList && node.classList.contains(\"sqs-list-item\")) {\n          node.style.width = itemWidth;\n          node.style.height = itemHeight;\n\n          const imgElement = node.querySelector(\"img\");\n\n          if (imgElement) {\n            imgElement.style.objectFit = \"cover\";\n            imgElement.style.width = \"100%\";\n            imgElement.style.height = \"100%\";\n          }\n        }\n      });\n    });\n  }\n\n  connectedCallback() {\n    this.getPropsValuesAndRenderList();\n  }\n}\n\ncustomElements.define(\"sqs-custom-list\", SqsCustomList);\n\n/*\nHow to use it:\n\n<sqs-custom-list \n  flexDirection=\"column\" \n  alignItems=\"center\" \n  justifyContent=\"space-around\" \n  itemWidth=\"100px\" \n  itemHeight=\"50px\" \n  gap=\"10px\">\n    <div class=\"sqs-list-item\">Item 1</div>\n    <div class=\"sqs-list-item\">Item 2</div>\n    <div class=\"sqs-list-item\">Item 3</div>\n</sqs-custom-list>\n*/\n"],"names":[],"version":3,"file":"index.0b50ffed.js.map","sourceRoot":"/__parcel_source_root/"}